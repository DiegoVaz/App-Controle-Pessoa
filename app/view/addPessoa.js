/*
 * File: app/view/addPessoa.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AppLogin.view.addPessoa', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.field.File',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    height: 222,
    id: 'addPessoa',
    width: 391,
    title: 'Adicionar nova pessoa',
    titleAlign: 'center',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    itemId: 'formAdd',
                    bodyPadding: 10,
                    title: '',
                    titleAlign: 'center',
                    items: [
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            fieldLabel: 'Label',
                            name: 'id'
                        },
                        {
                            xtype: 'hiddenfield',
                            anchor: '100%',
                            itemId: 'file',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'nome',
                            fieldLabel: 'Nome',
                            name: 'nome',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'cpf',
                            fieldLabel: 'CPF',
                            name: 'cpf',
                            allowBlank: false,
                            enableKeyEvents: true,
                            maxLength: 14,
                            maxLengthText: 'The maximum length for this field is {14}',
                            minLength: 11,
                            minLengthText: 'The minimum length for this field is {11}',
                            listeners: {
                                blur: {
                                    fn: me.onCpfBlur,
                                    scope: me
                                },
                                keypress: {
                                    fn: me.onCpfKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'textfield',
                            anchor: '100%',
                            itemId: 'telefone',
                            fieldLabel: 'Telefone',
                            name: 'telefone',
                            allowBlank: false,
                            enableKeyEvents: true,
                            maxLength: 15,
                            maxLengthText: 'The maximum length for this field is {15}',
                            minLength: 15,
                            minLengthText: 'The minimum length for this field is {15}',
                            listeners: {
                                blur: {
                                    fn: me.onTelefoneBlur,
                                    scope: me
                                },
                                keypress: {
                                    fn: me.onTelefoneKeypress,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'filefield',
                            anchor: '100%',
                            itemId: 'name',
                            fieldLabel: 'Imagem:',
                            buttonText: 'Procurar',
                            listeners: {
                                dirtychange: {
                                    fn: me.onNameDirtyChange,
                                    scope: me
                                }
                            }
                        }
                    ],
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'bottom',
                            layout: {
                                type: 'hbox',
                                pack: 'end'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    itemId: 'btnAdicionar',
                                    text: 'Adicionar',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick1,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'btnAtualizar',
                                    text: 'Atualizar',
                                    listeners: {
                                        click: {
                                            fn: me.onBtnAtualizarClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onCpfBlur: function(component, e, eOpts) {
        component.setValue(component.value.replace(/^(\d{3})(\d{3})(\d{3})(\d{2})/, "$1.$2.$3-$4"));

    },

    onCpfKeypress: function(textfield, e, eOpts) {
        if (textfield.value){
           textfield.setValue(textfield.value.replace(/[^0-9]/g, ""));
        }

    },

    onTelefoneBlur: function(component, e, eOpts) {
        component.setValue(component.value.replace(/^(\d{2})(\d{5})(\d{4})/, "($1) $2-$3"));
    },

    onTelefoneKeypress: function(textfield, e, eOpts) {
        if (textfield.value){
           textfield.setValue(textfield.value.replace(/[^0-9]/g, ""));
        }
    },

    onNameDirtyChange: function(field, isDirty, eOpts) {
        Ext.ComponentQuery.query('#file')[0].file = field.fileInputEl.dom.files[0];
    },

    onButtonClick1: function(button, e, eOpts) {
        var form = Ext.ComponentQuery.query('#formAdd')[0];
        var modal = Ext.ComponentQuery.query('#modalAddPessoa')[0];

        modal.el.mask("Salvando");

        if (form.isValid()){
            var dados = form.getValues();
            var file = Ext.ComponentQuery.query('#file')[0].file;
            var type = file.name.split('.');

            dados.img = Date.now() + '.' + type[type.length - 1];

            var ref = fbStorage.ref().child(dados.img);

            ref.put(file).then(function(snapshot) {
                console.log('Uploaded a blob or file!');

                fbFirestore.collection("Pessoa").add({
                    nome: dados.nome,
                    cpf: dados.cpf,
                    telefone: dados.telefone,
                    img: dados.img
                });
                modal.close();
                Ext.Msg.alert('Sucesso', 'Salvo com sucesso');
            }).catch(function(erro) {
                modal.el.unmask();
                Ext.Msg.alert('Sucesso', 'Erro ao salvar, tente novamente.');
            });
        } else {
            modal.el.unmask();
            Ext.Msg.alert('Status', 'Preencha os campos corretamente');
        }


    },

    onBtnAtualizarClick: function(button, e, eOpts) {
        var form = Ext.ComponentQuery.query('#formAdd')[0];
        var dados = form.getValues();
        var docId = dados.id;
        var dadosImg = dados.img;

        delete dados.id;

        if (form.isValid()){
            var dados = form.getValues();
            fbFirestore.collection("Pessoa").doc(docId).update(dados);
            Ext.ComponentQuery.query('#modalEditarPessoa')[0].close();
        } else {
            Ext.Msg.alert('Status', 'Preencha os campos corretamente');
        }
    }

});