/*
 * File: app/view/Viewport.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AppLogin.view.Viewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.form.FieldSet',
        'Ext.grid.Panel',
        'Ext.grid.View',
        'Ext.grid.column.Action',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.panel.Tool'
    ],

    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                afterrender: {
                    fn: me.onViewportAfterRender,
                    scope: me
                }
            },
            items: [
                {
                    xtype: 'panel',
                    frame: true,
                    padding: 50,
                    layout: 'fit',
                    title: 'Lista de pessoas',
                    titleAlign: 'center',
                    items: [
                        {
                            xtype: 'fieldset',
                            padding: 0,
                            layout: 'fit',
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    titleAlign: 'center',
                                    store: 'PessoaStore',
                                    viewConfig: {
                                        frame: true
                                    },
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            draggable: false,
                                            resizable: false,
                                            sortable: true,
                                            dataIndex: 'nome',
                                            menuDisabled: true,
                                            text: 'Nome',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            draggable: false,
                                            resizable: false,
                                            sortable: false,
                                            dataIndex: 'cpf',
                                            menuDisabled: true,
                                            text: 'CPF',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            draggable: false,
                                            resizable: false,
                                            sortable: false,
                                            dataIndex: 'telefone',
                                            menuDisabled: true,
                                            text: 'Celular',
                                            flex: 1
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            draggable: false,
                                            itemId: 'iconEditar',
                                            width: 32,
                                            resizable: false,
                                            menuDisabled: true,
                                            items: [
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        return 'icon-pencil icon';
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        var modal = Ext.create('AppLogin.view.addPessoa', {
                                                            itemId: "modalEditarPessoa"
                                                        });

                                                        modal.show();
                                                        modal.setTitle('Atualizar pessoa');
                                                        Ext.ComponentQuery.query('#btnAdicionar')[0].setVisible(false);
                                                        Ext.ComponentQuery.query('#btnAtualizar')[0].setVisible(true);
                                                        Ext.ComponentQuery.query('#name')[0].setAllow
                                                        Ext.ComponentQuery.query('#name')[0].setVisible(false);
                                                        Ext.ComponentQuery.query('#formAdd')[0].loadRecord(record);

                                                    }
                                                }
                                            ]
                                        },
                                        {
                                            xtype: 'actioncolumn',
                                            disabled: true,
                                            draggable: false,
                                            width: 32,
                                            resizable: false,
                                            items: [
                                                {
                                                    getClass: function(v, metadata, r, rowIndex, colIndex, store) {
                                                        return "icon-bin icon";
                                                    },
                                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                        AppLogin.controller.Firebase.ExcluirDados("Pessoa", record.data.id);
                                                        AppLogin.controller.Firebase.ExcluirArquivo(record.data.img);

                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    dockedItems: [
                                        {
                                            xtype: 'toolbar',
                                            dock: 'bottom',
                                            layout: {
                                                type: 'hbox',
                                                pack: 'end'
                                            },
                                            items: [
                                                {
                                                    xtype: 'button',
                                                    flex: 0,
                                                    border: true,
                                                    cls: 'btn-adicionar',
                                                    height: 40,
                                                    width: 200,
                                                    text: 'Adicionar',
                                                    listeners: {
                                                        click: {
                                                            fn: me.onButtonClick,
                                                            scope: me
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    ],
                                    listeners: {
                                        afterrender: {
                                            fn: me.onGridpanelAfterRender,
                                            scope: me
                                        },
                                        select: {
                                            fn: me.onGridpanelSelect,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    tools: [
                        {
                            xtype: 'tool',
                            handler: function(event, toolEl, owner, tool) {
                                firebase.auth().signOut().then(function() {
                                    localStorage.removeItem("login");
                                    Ext.create('AppLogin.view.modalLogin', {}).show();
                                }).catch(function(error) {
                                    // An error happened.
                                });
                            },
                            type: 'close'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onViewportAfterRender: function(component, eOpts) {
        fbAuth.onAuthStateChanged(function(user) {
            if (user) {
                var comp = Ext.ComponentQuery.query('#modalLogin')[0];
                if(comp){
                    comp.close();
                }
            }else{
                Ext.create('AppLogin.view.modalLogin', {}).show();
            }
        });
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.create('AppLogin.view.addPessoa', {
            itemId: "modalAddPessoa"
        }).show();
        Ext.ComponentQuery.query('#btnAtualizar')[0].setVisible(false);


    },

    onGridpanelAfterRender: function(component, eOpts) {
        var pessoas = AppLogin.controller.Firebase.ListaDados("Pessoa", function(data){
            component.store.loadData(data);
        });
    },

    onGridpanelSelect: function(rowmodel, record, index, eOpts) {
        var modal = Ext.create('AppLogin.view.modalImagem', {
            itemId: 'modalImagem'
        }).show();

        AppLogin.controller.Firebase.BuscarArquivo(record.data.img, function(url){
            modal.setImg(url.toString());
        }, function(error){
            Ext.Msg.alert('Status', 'Erro ao carregar imagem. Tente novamente!');
            modal.close();
        });
    }

});